spring:
  kafka:
    consumer:
      auto-offset-reset: latest
#      auto-offset-reset: earliest
      group-id: streamer
      enable-auto-commit: true
#      max.poll.interval.ms: 5000
#      max.poll.records: 50
    producer:
      client-id: streamer
    #生产者消费者共同的配置
    bootstrap-servers: ["${BROKER_LIST}"]
    #schema-registry服务是用confluent提供的schema-registry
    schema-registry-url: ["http://192.168.1.204:18081","http://192.168.1.100:18081","http://192.168.1.200:18081"]
    #和环境相关的topic前缀
    topic-prefix: ${ACTIVE_PROFILE}_
  application:
    name: streamer
  data:
    mongodb:
      uri: mongodb://${MONGO}/collector.pages
server:
  port: ${SERVER_PORT}

#根据设置的master.uri来决定部署模式是什么样的，这儿是用standalone模式，也可以运行在yarn上
collector.spark.master.uri: spark://${SPARK}:7077
#mongodb collection名字，用于保存三端上报的页面浏览信息
collector.mongo.page: pages
#mongodb collection名字，用于保存按时间维度计算出的每分钟的pv uv结果
collector.mongo.minute: minutes
#mongodb collection名字，用于保存按时间维度计算出的每小时的pv uv结果
collector.mongo.hour: hours
#mongodb collection名字，用于保存按时间维度计算出的每天的pv uv结果
collector.mongo.day: days
#mongodb collection名字，用于保存按时间维度计算出的每月的pv uv结果
collector.mongo.month: months

#mongodb collection名字，用于保存按时间维度计算出的每小时的平台访客结果
collector.mongo.platform.hour: platform_hours
#mongodb collection名字，用于保存按时间维度计算出的每天的平台访客结果
collector.mongo.platform.day: platform_days
#mongodb collection名字，用于保存按时间维度计算出的每月的平台访客结果
collector.mongo.platform.month: platform_months

#mongodb collection名字，用于保存按时间维度计算出的每天的认证结果
collector.mongo.auth.day: auth_days


#按时间维度计算每分钟的pv uv结果保存的kafka topic
streamer.kafka.minute: "streamer.minute"
#按更多维度计算每分钟的pv uv结果保存的kafka topic
streamer.kafka.minute.rich: "streamer.minute.rich"
#按时间维度计算每分钟的pv uv的检查点路径
streamer.hdfs.minute: "hdfs://${HDFS}/streamer/minute"
#按更多维度计算每分钟的pv uv的检查点路径
streamer.hdfs.rich.minute: "hdfs://${HDFS}/streamer/rich_minute"

#spark程序资源配置
spark.driver.cores: ${DRIVER_CORES}
spark.driver.memory: ${DRIVER_MEMORY}
spark.executor.cores: ${EXECUTOR_CORES}
spark.executor.memory: ${EXECUTOR_MEMORY}

---

spring:
  profiles:
    active: ${ACTIVE_PROFILE:dev}
  jackson:
    default-property-inclusion: non_null
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/simu_streamer_${ACTIVE_PROFILE}?rewriteBatchedStatements=true&autoReconnect=true&useUnicode=true&characterEncoding=utf-8&useSSL=false
    driver-class-name: com.mysql.jdbc.Driver
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PSW}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
  flyway:
    enabled: true
    locations: classpath:/db
    baseline-on-migrate: true
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: false
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

    #和环境相关的topic前缀
